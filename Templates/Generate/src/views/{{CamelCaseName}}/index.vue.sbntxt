<!--
* @description Created by AbpVueCli
* @author {{ModuleInfo.ProjectInfo.UserName}}
* @date {{date.to_string date.now `%F %T`}}
* @version V1.0.0
!-->
<template>
  <div class="app-full-container">
    <div class="app-full-header">
{{ for params in QueryParams }}
{{ if params.Parameter.Schema.Type == 'boolean' }}
      <el-switch v-model="query.{{params.CamelCaseName}}" />
{{ else if params.Parameter.Schema.Type == 'integer' }}
      <el-input
        v-model="query.{{params.CamelCaseName}}"
        placeholder="{{params.Description}}"
        clearable
        class="header-item"
        size="mini"
        type="number"
      />
{{ else if params.Parameter.Schema.Format == 'date-time'}}
      <el-date-picker v-model="query.{{params.CamelCaseName}}" size="mini" type="date" />
{{ else }}
      <el-input
        v-model="query.{{params.CamelCaseName}}"
        placeholder="{{params.Description}}"
        clearable
        class="header-item"
        size="mini"
      />{{ end }}{{ end }}
{{ if QueryParams != empty }}      <el-button class="header-item-btn" type="primary" size="mini" @click="getList">搜索</el-button>{{ end}}
{{ if GenerateCreate }}      <el-button {{if PermissionControl}} v-permission="['Ai.{{PascalCaseName}}.Create']" {{end}}class="header-item-btn" type="success" size="mini" @click="create">新增</el-button>{{ end }}
    </div>
    <div class="app-full-body">
      <el-table
        :data="tableData"
        highlight-current-row
        size="mini"
        @sort-change="onSortChange"
      >
{{ for prop in ListProperty }}
{{ if prop.Value.Type == 'boolean'}}
        <el-table-column
          prop="{{prop.Key}}"
          label="{{prop.Value.Description | object.default prop.Key}}"
          sortable="custom"
          show-overflow-tooltip
        >
          <template slot-scope="scope">
            {{'{{'}} scope.row.{{prop.Key}} {{'}}'}}
          </template>
        </el-table-column>
{{ else }}
        <el-table-column
          prop="{{prop.Key}}"
          label="{{prop.Value.Description | object.default prop.Key}}"
          sortable="custom"
        />{{end }}{{ end }}
        <el-table-column
          label="操作"
        >
          <template slot-scope="scope">
{{ if GenerateEdit }}            <el-link {{if PermissionControl}} v-permission="['Ai.{{PascalCaseName}}.Update']" {{end}}type="primary" icon="el-icon-edit" @click="edit(scope.row)">编辑</el-link>{{ end }}
            <el-popconfirm {{if PermissionControl}} v-permission="['Ai.{{PascalCaseName}}.Delete']" {{end}}placement="top" title="确定删除此项？" @onConfirm="del(scope.row)">
              <el-link slot="reference" type="danger" icon="el-icon-delete">删除</el-link>
            </el-popconfirm>
          </template>
        </el-table-column>
      </el-table>
    </div>
    <div class="app-full-footer">
      <pagination
        :total="pagination.totalCount"
        :page.sync="pagination.pageIndex"
        :limit.sync="query.maxResultCount"
        @pagination="onPagination"
      />
    </div>
{{ if GenerateCreate }}    <CreateDialog
      :visible.sync="createDialogVisible"
      :close-confirm="true"
      dialog-width="50%"
      @close="dialogClose"
    />{{ end }}
{{ if GenerateEdit }}    <EditDialog
      :visible.sync="editDialogVisible"
      :{{ CamelCaseName }}Id="edit{{ PascalCaseName }}Id"
      :close-confirm="true"
      dialog-width="50%"
      @close="dialogClose"
    />{{ end }}

  </div>
</template>

<script>
import listMixin from '@/mixins/listMixin'
import {{ CamelCaseName }}Api from '@/api/{{ CamelCaseName }}'
import Pagination from '@/components/Pagination'
{{ if GenerateCreate }}import CreateDialog from './components/{{ PascalCaseName }}CreateDialog'{{ end }}
{{ if GenerateEdit }}import EditDialog from './components/{{ PascalCaseName }}EditDialog'{{ end }}

export default {
  name: 'Index',
  components: { {{ if GenerateCreate }}CreateDialog,{{ end }} {{ if GenerateEdit }}EditDialog, {{ end }}Pagination },
  mixins: [listMixin],
  data() {
    return {
{{ if GenerateCreate }}      createDialogVisible: false,{{ end }}
{{ if GenerateEdit }}      editDialogVisible: false,
      edit{{ PascalCaseName }}Id: '',{{ end }}
      query: {
{{ for params in QueryParams }}
        {{params.CamelCaseName}}: '',{{ end }}
      }
    }
  },
  created() {
    this.getList()
  },
  methods: {
    getList() {
      {{ CamelCaseName }}Api.getList(this.query).then(res => {
        this.tableData = res.{{ModuleInfo.ProjectInfo.ListPropertySchemaPath}}
        this.updateTotalCount(res.totalCount)
      })
    },
    dialogClose(refresh) {
      if (refresh) {
        this.getList()
      }
      this.edit{{ PascalCaseName }}Id = null
    },{{ if GenerateCreate }}
    create() {
      this.createDialogVisible = true
    },{{ end }}
{{ if GenerateEdit }}    edit(row) {
      this.edit{{ PascalCaseName }}Id = row.id
      this.editDialogVisible = true
    },{{ end }}
    del(row) {
      {{ CamelCaseName }}Api.delete(row.id).then(() => {
        this.$message('删除成功')
        this.getList()
      })
    }
  }
}
</script>
